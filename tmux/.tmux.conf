# 默认shell
#set-option -g default-shell /bin/zsh

# 设置prefix
#set -g prefix C-Space

# 重新加载配置文件
bind r source-file ~/.tmux.conf

# 避免 esc 与 alt 组合键的冲突
set -g escape-time 10
# 历史记录
set -g history-limit 50000
# 提示信息停留时间
set -g display-time 3000

# pane/window编号从1开始
set  -g base-index 1
setw -g pane-base-index 1

# copy-mode设置为vi模式
setw -g mode-keys vi

# focus-events
set -g focus-events on

## "xterm-256color",
## "screen-256color"
## "tmux-256color"
set -g default-terminal "tmux-256color"
# true color support
# set-option -ga terminal-overrides ",*256col*:Tc"
set-option -ga terminal-overrides ",*256col*:RGB"

# status line {
# base='#1e1e2e'
# #surface0='#313244'
# #surface1='#45475a'
# surface2='#585b70'
# text='#cdd6f4'

# # base0='#8a8a8a'
# # base1='#585858'
# # base2='#424242'
# # base3='#262626'
# # base4='#1e1e1e'
# # base5='#121212'
# # extra0='#007acc'

# #set -g status-justify centre
# set -g status-style "bg=$base, fg=$surface2"
# set -g status-left "#[bg=blue, fg=black] #S "
# set -g status-left-length 400
# set -g status-right "#{?client_prefix, <Wait>,} #[bg=white, fg=black] #h #[bg=blue, fg=black] %Y-%m-%d %H:%M "
# set -g status-right-length 600

# set -g message-style "bg=$base, fg=red"

# set -wg window-status-format " #I: #W "
# set -wg window-status-current-format " #I: #W "
# set -wg window-status-separator ""
# set -wg window-status-current-style "bg=$base, fg=blue, bold"
# set -wg window-status-last-style "fg=white"

# set -wg pane-active-border-style "fg=green"
# set -wg pane-border-style "fg=white"

# set -wg mode-style "bg=blue, fg=white"
# ----------------------------=== Theme ===--------------------------

# --> Catppuccin
thm_bg="#1e1e2e" # base
thm_fg="#cdd6f4" # text
thm_cyan="#94e2d5" # teal
thm_black="#45475a" # surface1
thm_gray="#585b70" # surface2
thm_magenta="#f5c2e7" # pink
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#fab387"
thm_blue="#89b4fa"

# status
#set -g status-position top
#set -g status-justify centre
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style fg="${thm_red}",bg="${thm_gray}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"

# panes
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_green}"

# windows
setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none

# --------=== Statusline

set -g status-style "bg=$thm_bg, fg=$thm_fg"
set -g status-left ""
set -g status-right "#[fg=$thm_magenta,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics]📁 #[fg=$thm_fg,bg=$thm_gray] #W #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_gray]#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] #[fg=$thm_fg,bg=$thm_gray] #S "

# current_dir
setw -g window-status-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_fg,bg=$thm_gray] #{b:pane_current_path} "
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_yellow] #I #[fg=$thm_fg,bg=$thm_bg] #{b:pane_current_path} "

# parent_dir/current_dir
# setw -g window-status-format "#[fg=colour232,bg=colour111] #I #[fg=colour222,bg=colour235] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "
# setw -g window-status-current-format "#[fg=colour232,bg=colour208] #I #[fg=colour255,bg=colour237] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "

# --------=== Modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_magenta},bg=${thm_gray},bold"

# -- key bingdings -------------------------------------------------

# 当前目录打开新窗口
bind c new-window -c "#{pane_current_path}"

# 切换至上一个window
bind \; last-window

# kill window
bind 0 kill-window

# -/_ 水平/竖直分割pane
unbind-key '"'
unbind-key %
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -h -c "#{pane_current_path}"

# h/j/k/l 切换pane
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# 调整pane大小
bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# 上一个pane
bind Tab last-pane

# copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection

# -- 鼠标支持 -----
set -g mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# 插件管理
#set -g @plugin 'tmux-plugins/tpm'

#set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
#set -g @prefix_highlight_fg $base5
#set -g @prefix_highlight_bg $extra0
#set -g @prefix_highlight_prefix_prompt 'Wait'
#set -g @prefix_highlight_show_copy_mode 'on'
#set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
#set -g @prefix_highlight_show_sync_mode 'on'
#set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green'

#set -g @plugin 'tmux-plugins/tmux-battery'
#
#set -g status-right "#{prefix_highlight}\
##[fg=$base5]\
##{battery_color_bg} #{battery_percentage} #{battery_icon} \
##[bg=$base1, fg=$base3] #h #[bg=$base0, fg=$base3] %Y-%m-%d %H:%M "

#run '~/.tmux/plugins/tpm/tpm'
